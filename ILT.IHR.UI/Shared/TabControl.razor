<CascadingValue Value="this">
    <div class="btn-group display-block" role="group">
        @foreach (TabPage tabPage in Pages)
        {
            @if (tabPage.IsHide == false)
            {
                <button type="button"
                        class="btn @GetButtonClass(tabPage) @(tabPage.IsDisable == true ? "disable" : "")"
                        @onclick=@( () => ActivatePage(tabPage) )>
                    @tabPage.Text
                </button>
            }
        }
    </div>
    <div class="tab">
        @ChildContent
    </div>
    
</CascadingValue>

@code {

    // Next line is needed so we are able to add <TabPage> components inside
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    public TabPage ActivePage { get; set; }
    List<TabPage> Pages = new List<TabPage>();

    internal void AddPage(TabPage tabPage)
    {
        Pages.Add(tabPage);
        if (Pages.Count == 1)
            ActivePage = tabPage;
        StateHasChanged();
    }

    string GetButtonClass(TabPage page)
    {
        return page == ActivePage ? "btn-primary" : "tab-heading";
    }

    void ActivatePage(TabPage page)
    {
        ActivePage = page;
    }

    public void ActivePageByIndex(int index)
    {
        ActivePage = Pages[index];
    }

    public void ActivePageByText(string text)
    {
        int index = Pages.FindIndex(x => x.Text.ToUpper() == text.ToUpper());
        ActivePage = Pages[index];
    }
}